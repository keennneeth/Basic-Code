#include <bits/stdc++.h>
using namespace std;
 
struct Node
{
int tree;
Node *left, *right;
 
Node(int tree)
{
    this->tree = tree;
    this->left = this->right = nullptr;
    }
};
 

void findMaxWidth(Node* root)
{
    if (root == nullptr) {
        return;
    }
 

list<Node*> queue;
queue.push_back(root);
 
Node* curr = nullptr;
int max = 0;

while (!queue.empty())
    {
        int width = queue.size();
 
        if (max < width) {
            max = width;
        }
 
while (width--)
    {
        curr = queue.front();
        queue.pop_front();
 
        if (curr->left) {
        queue.push_back(curr->left);
    }
 
        if (curr->right) {
        queue.push_back(curr->right);
            }
        }
    }
    cout << "The maximum width of this tree is " << max;
 }
 
int main()
{
    Node* root = new Node(1);
    root->right = new Node(3);
    root->left = new Node(2);
    root->left->left = new Node(4);
    root->left->right = new Node(5);
    root->right->right = new Node(8);
    root->right->right->left = new Node(6);
    root->right->right->right = new Node(7);

    findMaxWidth(root);
 
    return 0;
}
